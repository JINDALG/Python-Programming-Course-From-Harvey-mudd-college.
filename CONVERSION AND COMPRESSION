def numToBaseB(n,b): #decimal to binary conversion
    string = ''
    while n != 0:
        if n%b==0:
            string = '0' + string
        elif n%b==1:
            string = '1' + string
        elif n%b ==2:
            string = '2'+ string
        elif n%b==3:
            string ='3'+string
        elif n%b == 4:
            string = '4'+string
        elif n%b==5:
            string = '5'+string
        elif n%b==6:
            string = '6' + string
        elif n%b==7:
            string = '7' + string
        elif n%b==8:
            string = '8' + string
        else :
            string = '9' + string
        n=n/b
    return string

def baseBToNum(string,b):
    dec=0
    count=0
    while string != '':
        if string[-1]=='1':
            dec =dec + (b**count);
        elif string[-1]=='2':
            dec=dec+ 2*(b**count)
        elif string[-1]=='3':
            dec=dec+ 3*(b**count)
        elif string[-1]=='4':
            dec=dec+ 4*(b**count)
        elif string[-1]=='5':
            dec=dec+ 5*(b**count)
        elif string[-1]=='6':
            dec=dec+ 6*(b**count)
        elif string[-1]=='7':
            dec=dec+ 7*(b**count)
        elif string[-1]=='8':
            dec=dec+ 8*(b**count)
        elif string[-1]=='9':
            dec=dec+ 9*(b**count)
        count = count +1
        string = string[:-1]
    return dec  


def baseToBase(B1,B2,s_in_B1):
    dec = baseBToNum(s_in_B1,B1)
    dec = numToBaseB(dec,B2)
    return dec


def add(S,T):
    s=baseBToNum(S,2)
    t=baseBToNum(T,2)
    s=s+t
    return numToBaseB(s,2)


def addB(s,t):
    ls = len(s)
    lt = len(t)
    string = ''
    carry=0
    defe  = ls-lt
    if defe <= 0:
        s = '0'*(-defe) + s
    else :
        t  = '0'*defe + t
    while s != '':
        if  (s[-1]=='1' and t[-1]=='1' and carry == 1):
            string = '1' + string
            carry = 1
        elif (s[-1]=='1' and t[-1]=='1') or (s[-1]=='1' and carry==1) or (t[-1]=='1' and carry == 1):
            string = '0' + string
            carry = 1
        elif (s[-1] == '1' or t[-1]=='1' or carry ==1):
            string = '1' + string
            carry = 0
        else :
            string = '0' + string
            carry = 0
        s=s[:-1]
        t=t[:-1]
    if carry == 1:
        return '1' + string
    else :
        return string

def numToBinary(n):
    
    string = ''
    while n != 0:
        if n%2==0:
            string = '0' + string
        else :
            string = '1'+ string
        n=n/2
    string = '0'*7 +string
    return string[-7:]

def binaryToNum(string):
    dec=0
    count=0
    while string != '':
        if string[-1]=='1':
            dec =dec + (2**count);
        count = count +1
        string = string[:-1]
    return dec  
                                        
def compress(s):
    string = ''
    count=0
    curr = 1
    while s != '':
        count=0
        curr = s[0]
        while s != '' and curr == s[0]:
            count +=1
            s=s[1:]
        string = string + str(curr) + numToBinary(count)
    return string


def uncompress(s):
    string = ''
    while s != '':
        count = binaryToNum(s[1:8])
        string = string + s[0]*count
        s =s[8:]
    return string
